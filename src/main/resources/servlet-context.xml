<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd">
		
	<!-- database.properties 이용하기 위해 추가 -->
	<context:property-placeholder location="classpath:database.properties" />

	<mvc:annotation-driven>
		<mvc:argument-resolvers>
			<bean class="org.springframework.mobile.device.DeviceWebArgumentResolver" />
		</mvc:argument-resolvers>
	</mvc:annotation-driven>
	<mvc:resources mapping="/assets/**" location="/assets/" />
	
	<!-- Login 여부 확인을 위한 Interceptor추가. -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**/*"/>
			<mvc:exclude-mapping path="/login"/>
			<mvc:exclude-mapping path="/assets/**/*"/>
			<bean id="loginInterceptor" class="intercepter.LoginInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- component scan시 controller만 설정 -->
	<context:component-scan
		base-package="controller, service, repository"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Repository" />
		<context:include-filter type="annotation" 
			expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	
	<!-- jsp 파일경로 설정을 위한 prefix 및 suffix 설정 -->
	<!-- prefix + viewName + suffix -->
	<!-- 참조 : org.springframework.web.servlet.view.UrlBasedViewResolver.buildView(String) -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- MySQL에 연동하기 위한 BasicDataSource -->
	<bean id="defaultDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		
		<!-- <property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://10.113.235.99:13306/koreatechEV" />
		<property name="username" value="admin" />
		<property name="password" value="admin" /> -->
	</bean>
	
	<!--JSON 객체 반환을 위해서 추가한 Bean -->
 	<bean id="jacksonMessageConverter"
 		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
 	<bean id="jacksonObjectMapper" class="com.fasterxml.jackson.databind.ObjectMapper" />

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="defaultDataSource" />
	</bean>
</beans>